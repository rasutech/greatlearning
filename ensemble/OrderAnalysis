import pandas as pd
import matplotlib.pyplot as plt

# ... (rest of the code remains the same until the plotting sections)

# 1. Volumetric Throughput by Received Month with Count Labels
plt.figure(figsize=(10, 6))
bars = received_counts.plot(kind='bar', color='skyblue', label='Received')

# Add count labels
for bar in bars.patches:
    plt.annotate(format(bar.get_height(), '.0f'), 
                 (bar.get_x() + bar.get_width() / 2, bar.get_height()), 
                 ha='center', va='center', xytext=(0, 5), textcoords='offset points')

plt.title('Volumetric Throughput of Orders by Received Month')
plt.xlabel('Month')
plt.ylabel('Number of Orders')
plt.legend()
plt.show()

# 2. Volumetric Throughput by Completed Month with Count Labels
plt.figure(figsize=(10, 6))
bars = completed_counts.plot(kind='bar', color='green', label='Completed')

# Add count labels
for bar in bars.patches:
    plt.annotate(format(bar.get_height(), '.0f'), 
                 (bar.get_x() + bar.get_width() / 2, bar.get_height()), 
                 ha='center', va='center', xytext=(0, 5), textcoords='offset points')

plt.title('Volumetric Throughput of Orders by Completed Month')
plt.xlabel('Month')
plt.ylabel('Number of Orders')
plt.legend()
plt.show()

# 3. Combined Bar Chart with Count Labels
plt.figure(figsize=(10, 6))
bars = combined_counts.plot(kind='bar', rot=0)

# Add count labels for each bar group
for bar_group in bars.containers:
    for bar in bar_group:
        plt.annotate(format(bar.get_height(), '.0f'), 
                     (bar.get_x() + bar.get_width() / 2, bar.get_height()), 
                     ha='center', va='center', xytext=(0, 5), textcoords='offset points')

plt.title('Volumetric Throughput - Received vs Completed')
plt.xlabel('Month')
plt.ylabel('Number of Orders')
plt.legend()
plt.show()

# 4. Stacked Bar Chart with Count Labels
def plot_stacked_bar(category):
    # ... (rest of the function remains the same)

    # Add count labels for each segment in the stacked bar
    for bar_group in bars.containers:
        for bar in bar_group:
            plt.annotate(format(bar.get_height(), '.0f'), 
                         (bar.get_x() + bar.get_width() / 2, bar.get_y() + bar.get_height() / 2), 
                         ha='center', va='center')

    # ... (rest of the function remains the same)

# ... (rest of the code remains the same)
